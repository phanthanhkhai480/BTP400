package lab4;

import java.io.*;
import java.net.*;
import java.util.Scanner;

public class AccountClient {

	public static void main(String[] args) {
		Socket AccountClient;
		
		try {
			//connect to server via an IP address/server name with a port number
			AccountClient = new Socket( InetAddress.getByName( "localhost" ), 8000 );
			System.out.println( "Connected to " + AccountClient.getInetAddress().getHostName() );
			
			//create input/output stream to the socket
			//this will help transfer the input from client to server
			//and output from server back to client
			ObjectInputStream  oisFromServer= new ObjectInputStream( AccountClient.getInputStream()  );
			ObjectOutputStream oosToServer = new ObjectOutputStream( AccountClient.getOutputStream() );    
			System.out.println( "I/O streams connected to the socket" );
			
			//initialize the object
			Account account = new Account("Khai Phan", "A1111", 1000.00);
			//create scanner object to receive input and pass to server
			Scanner object = new Scanner(System.in);
			//string object to hold in put and pass into server
			String command = "", command1 = "", command2 = "";
			//set exit condition
			boolean programQuit = false;
			System.out.println("Here!");
			
			try {
				oosToServer.writeObject(account);
				oosToServer.flush();
				
				command = oisFromServer.readUTF();
				//System.out.println(command);
				
				if(command.equals("")) {
					while(!programQuit) {
						System.out.println(account);
						System.out.print("What would you like to do with the account?");
						command = object.nextLine();
						command.toLowerCase();
						if(command.contains(" ")) {
							command1 = command.substring(0, command.indexOf(" "));
							command2 = command.substring(command.indexOf(" "));
							System.out.println(command1);
							System.out.println(command2);
						}
						else if(command.equals("quit"))
							programQuit = true;
					}
				} else {
					System.out.println(command);
				}
				
				

			} catch( EOFException eof ) 
				{ System.out.println( "The server has terminated connection!" ); }
			  catch(IOException e ) 
				{ e.printStackTrace(); }	
			
				 //close the socket with the server
			     System.out.println( "\nClient: closing the connection..." );		
			     oosToServer.close();
			     oisFromServer.close();
			     AccountClient.close();	
			     object.close();
		     
		} catch( IOException ioe ) 
			{ ioe.printStackTrace(); }
 
		System.out.println( "*** the client is going to stop running ***" );

	}

}
